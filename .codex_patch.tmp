*** Begin Patch
*** Update File: web/src/components/bsdd/BsddClassPicker.tsx
@@
-import { useEffect, useState } from "react";
+import { useEffect, useRef, useState } from "react";
@@
 export default function BsddClassPicker({ open, onClose, dicts, initialQuery, onPick }: Props) {
   const [query, setQuery] = useState(initialQuery || "");
   const [limit, setLimit] = useState(50);
+  const scrollRef = useRef<HTMLDivElement | null>(null);
   useEffect(() => {
     if (open) {
       setQuery(initialQuery || "");
       setLimit(50);
     }
   }, [open, initialQuery]);
   const { results, loading } = useBsddClassSearch(query, dicts, limit, 250);
@@
-        <div className="max-h-[45vh] overflow-auto" onScroll={(e) => {
+        <div
+          ref={scrollRef}
+          className="max-h-[45vh] overflow-auto"
+          onScroll={(e) => {
           const el = e.currentTarget as HTMLDivElement;
           if (el.scrollTop + el.clientHeight >= el.scrollHeight - 48 && !loading) {
             setLimit((prev) => Math.min(prev + 50, 500));
           }
-        }}>
-          {loading ? (
-            <p className="text-sm text-gray-500">Searching…</p>
-          ) : results.length === 0 ? (
-            <p className="text-sm text-gray-500">No results.</p>
-          ) : (
-            <ul className="divide-y">
-              {results.map((r) => (
-                <li key={r.uri} className="py-2 flex items-center justify-between gap-2">
-                  <div>
-                    <div className="text-sm font-medium">{r.name}</div>
-                    <div className="text-xs text-gray-500">
-                      {r.referenceCode || ""}
-                      {r.dictionaryName ? (
-                        <span className="ml-2 opacity-80">• {r.dictionaryName}</span>
-                      ) : null}
-                    </div>
-                    <div className="text-[11px] text-gray-400 break-all">{r.uri}</div>
-                  </div>
-                  <Button className="text-xs" variant="secondary" onClick={() => onPick(r)}>
-                    Use
-                  </Button>
-                </li>
-              ))}
-            </ul>
-          )}
-        </div>
+        }}
+        >
+          {results.length === 0 ? (
+            loading ? (
+              <p className="p-2 text-sm text-gray-500">Searching…</p>
+            ) : (
+              <p className="p-2 text-sm text-gray-500">No results.</p>
+            )
+          ) : (
+            <>
+              <ul className="divide-y">
+                {results.map((r) => (
+                  <li key={r.uri} className="py-2 flex items-center justify-between gap-2">
+                    <div>
+                      <div className="text-sm font-medium">{r.name}</div>
+                      <div className="text-xs text-gray-500">
+                        {r.referenceCode || ""}
+                        {r.dictionaryName ? (
+                          <span className="ml-2 opacity-80">• {r.dictionaryName}</span>
+                        ) : null}
+                      </div>
+                      <div className="text-[11px] text-gray-400 break-all">{r.uri}</div>
+                    </div>
+                    <Button className="text-xs" variant="secondary" onClick={() => onPick(r)}>
+                      Use
+                    </Button>
+                  </li>
+                ))}
+              </ul>
+              {loading ? (
+                <div className="p-2 text-xs text-gray-500 text-center">Loading more…</div>
+              ) : null}
+            </>
+          )}
+        </div>
*** End Patch
